#!/bin/bash
set -euo pipefail

# Dossiers / chemins
GAMEDIR="${GAMEDIR:-/opt/sandstorm}"
CFGDIR="${GAMEDIR}/Insurgency/Saved/Config/LinuxServer"
GAMEINI="${CFGDIR}/Game.ini"
MAPCYCLE="${GAMEDIR}/Insurgency/Config/Server/MapCycle.txt"
STEAMCMDDIR="${STEAMCMDDIR:-/home/steam/steamcmd}"
APPID="${APPID:-581330}"

# Valeurs par défaut (éditables via compose/Portainer)
: "${AUTO_UPDATE:=1}"
: "${PORT:=27102}"
: "${QUERYPORT:=27131}"
: "${BEACONPORT:=15000}"
: "${RCON_PASSWORD:=ChangeMe!}"
: "${SS_HOSTNAME:=Chourmovs ISS}"
: "${SS_MAXPLAYERS:=16}"

# Map / mode par défaut
: "${SS_MAP:=Farmhouse}"
: "${SS_SCENARIO:=Scenario_Farmhouse_Checkpoint_Security}"
: "${SS_GAME_MODE:=Checkpoint}"

# BOTS
: "${SS_BOTS_ENABLED:=1}"         
: "${SS_BOT_NUM:=8}"              
: "${SS_BOT_QUOTA:=1.0}"          
: "${SS_BOT_DIFFICULTY:=0.6}"     

# Supply / respawn
: "${SS_INITIAL_SUPPLY:=20}"
: "${SS_MAX_SUPPLY:=30}"

# Qualité de vie
: "${SS_FRIENDLY_FIRE_SCALE:=0.2}"  
: "${SS_KILL_FEED:=1}"              
: "${SS_KILL_CAMERA:=0}"            
: "${SS_VOICE_ENABLED:=1}"          

# Durées
: "${SS_ROUND_TIME:=900}"           
: "${SS_POST_ROUND_TIME:=15}"       

# Voting
: "${SS_VOTE_ENABLED:=1}"
: "${SS_VOTE_PERCENT:=0.6}"

# Avancés (coop scaling)
: "${SS_MIN_ENEMIES:=10}"
: "${SS_MAX_ENEMIES:=24}"
: "${SS_BOTS_USE_VEHICLES:=1}"   # 1/0
: "${SS_SOLO_ENEMIES:=0}"
: "${SS_RESPAWN_DPR:=0.5}"
: "${SS_DEFEND_TIME:=45}"

# MapCycle
: "${SS_MAPCYCLE:=${SS_SCENARIO}}"

echo "▶️ Starting Insurgency Sandstorm Dedicated Server...

  PORT=${PORT} | QUERYPORT=${QUERYPORT} | BEACONPORT=${BEACONPORT}
  RCON_PASSWORD=******** | AUTO_UPDATE=${AUTO_UPDATE}
  MAP=${SS_MAP} | SCENARIO=${SS_SCENARIO} | MODE=${SS_GAME_MODE}
"

mkdir -p "${CFGDIR}" "$(dirname "${MAPCYCLE}")" "${GAMEDIR}/Insurgency/Saved/SaveGames"

# ──────────────────────────
# (A) Steam update
# ──────────────────────────
if [ "${AUTO_UPDATE}" = "1" ]; then
  echo "📥 Updating server via SteamCMD..."
  "${STEAMCMDDIR}/steamcmd.sh" +@sSteamCmdForcePlatformType linux \
    +force_install_dir "${GAMEDIR}" \
    +login anonymous \
    +app_update "${APPID}" validate \
    +quit || {
      echo "⚠️ validate failed, retrying without validate..."
      "${STEAMCMDDIR}/steamcmd.sh" +@sSteamCmdForcePlatformType linux \
        +force_install_dir "${GAMEDIR}" \
        +login anonymous \
        +app_update "${APPID}" \
        +quit || echo "❌ SteamCMD update failed (continuing if server already present)"
    }
fi

# ──────────────────────────
# (B) MapCycle
# ──────────────────────────
echo "🗺️  Writing MapCycle..."
{
  echo "# Generated by entrypoint"
  echo "${SS_MAPCYCLE}" | tr '\r' '\n' | sed '/^\s*$/d'
} > "${MAPCYCLE}"

# ──────────────────────────
# (C) Game.ini
# ──────────────────────────
echo "🧩 Writing Game.ini..."
cat > "${GAMEINI}" <<EOF
[/Script/Insurgency.INSGameMode]
bKillFeed=${SS_KILL_FEED}
bKillCamera=${SS_KILL_CAMERA}
bVoiceEnabled=${SS_VOICE_ENABLED}
FriendlyFireDamageScale=${SS_FRIENDLY_FIRE_SCALE}
RoundTime=${SS_ROUND_TIME}
PostRoundTime=${SS_POST_ROUND_TIME}

[/Script/Insurgency.INSCoopMode]
bBots=${SS_BOTS_ENABLED}
NumBots=${SS_BOT_NUM}
BotQuota=${SS_BOT_QUOTA}
BotDifficulty=${SS_BOT_DIFFICULTY}
bKickIdleSpectators=True

[/Script/Insurgency.INSCheckpointGameMode]
bBots=${SS_BOTS_ENABLED}
NumBots=${SS_BOT_NUM}
BotQuota=${SS_BOT_QUOTA}
BotDifficulty=${SS_BOT_DIFFICULTY}
InitialSupply=${SS_INITIAL_SUPPLY}
MaxSupply=${SS_MAX_SUPPLY}
MinimumEnemies=${SS_MIN_ENEMIES}
MaximumEnemies=${SS_MAX_ENEMIES}
bBotsUseVehicleInsertion=$([ "${SS_BOTS_USE_VEHICLES}" = "1" ] && echo True || echo False)
SoloEnemies=${SS_SOLO_ENEMIES}
RespawnDPR=${SS_RESPAWN_DPR}
DefendCaptureTime=${SS_DEFEND_TIME}

; Voting
bAllowVoting=${SS_VOTE_ENABLED}
RequiredVotePercentage=${SS_VOTE_PERCENT}

[Rcon]
bEnabled=True
Password=${RCON_PASSWORD}
ListenPort=${PORT}
EOF

echo "✅ Game.ini & MapCycle.txt written."

# ──────────────────────────
# (D) Lancement
# ──────────────────────────
cd "${GAMEDIR}/Insurgency/Binaries/Linux"
LAUNCH_MAP="${SS_MAP}?Scenario=${SS_SCENARIO}?MaxPlayers=${SS_MAXPLAYERS}"

exec ./InsurgencyServer-Linux-Shipping \
  "${LAUNCH_MAP}" \
  -hostname="${SS_HOSTNAME}" \
  -Port="${PORT}" -QueryPort="${QUERYPORT}" -BeaconPort="${BEACONPORT}" \
  -Rcon \
  -RconPassword="${RCON_PASSWORD}" \
  -log
